version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: auton_postgres
    environment:
      POSTGRES_DB: auton_db
      POSTGRES_USER: auton_user
      POSTGRES_PASSWORD: auton_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - auton_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: auton_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - auton_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: auton_backend
    environment:
      - DATABASE_URL=postgresql://auton_user:auton_pass@postgres:5432/auton_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - auton_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    image: node:18-alpine
    container_name: auton_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev"
    ports:
      - "3000:3000"
    networks:
      - auton_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: auton_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - auton_network

volumes:
  postgres_data:
  redis_data:

networks:
  auton_network:
    driver: bridge

