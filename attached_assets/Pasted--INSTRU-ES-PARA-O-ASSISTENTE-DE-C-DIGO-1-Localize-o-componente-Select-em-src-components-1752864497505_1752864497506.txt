üß† INSTRU√á√ïES PARA O ASSISTENTE DE C√ìDIGO:

1. **Localize o componente `Select` em `src/components/ui/select.tsx`, especialmente nas linhas pr√≥ximas a 123.**

2. Fa√ßa os seguintes ajustes:

   - **A. Evite desmontar o `<Select />` de forma abrupta** com simples `if (isOpen) return <Select />`, pois isso pode causar conflitos com portais. Em vez disso, envolva com `AnimatePresence` (do `framer-motion`) ou `Presence` (do `@radix-ui/react-presence`), para garantir a transi√ß√£o segura.

   - **B. Certifique-se de que a desmontagem s√≥ ocorra quando o Portal estiver de fato montado no DOM**. Utilize um controle de `ref` para validar a exist√™ncia do n√≥ antes de tentar remov√™-lo:

     ```tsx
     const portalRef = useRef<HTMLDivElement | null>(null);

     useEffect(() => {
       return () => {
         if (portalRef.current && portalRef.current.parentNode) {
           try {
             portalRef.current.parentNode.removeChild(portalRef.current);
           } catch (e) {
             console.warn('Portal j√° foi removido.');
           }
         }
       };
     }, []);
     ```

   - **C. Adicione uma `key` √∫nica ao `<Select />` para garantir que o React consiga identificar corretamente as inst√¢ncias renderizadas**:

     ```tsx
     <Select key={someStableId} {...props} />
     ```

3. **Habilite o uso de `ErrorBoundary` em volta do componente `Select` para evitar que erros desse tipo derrubem a aplica√ß√£o inteira:**

   Crie um arquivo `components/ErrorBoundary.tsx`:

   ```tsx
   import React from 'react';

   class ErrorBoundary extends React.Component {
     state = { hasError: false };

     static getDerivedStateFromError() {
       return { hasError: true };
     }

     componentDidCatch(error: any, errorInfo: any) {
       console.error('Erro capturado pelo ErrorBoundary:', error, errorInfo);
     }

     render() {
       if (this.state.hasError) {
         return <p>Erro ao carregar componente.</p>;
       }
       return this.props.children;
     }
   }

   export default ErrorBoundary;
